'\" t
.\"     Title: shards
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.12
.\"      Date: 2021-03-10
.\"    Manual: Shards Manual
.\"    Source: shards 0.14.1
.\"  Language: English
.\"
.TH "SHARDS" "1" "2021-03-10" "shards 0.14.1" "Shards Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
shards \- dependency manager for the Crystal Language
.SH "SYNOPSIS"
.sp
\fBshards [<general_options>...] [<command>] [<command_options>...]\fP
.SH "DESCRIPTION"
.sp
Manages dependencies for Crystal projects and libraries with reproducible
installs across computers and systems.
.SH "USAGE"
.sp
\fIshards\fP requires the presence of a \fBshard.yml\fP file in the project
folder (working directory). This file describes the project and lists
dependencies that are required to build it. See \fBshard.yml\fP(5) for more
information on its format. A default file can be created by running \fBshards init\fP.
.sp
Running \fBshards install\fP resolves and installs the
specified dependencies. The installed versions are written into a
\fBshard.lock\fP file for using the exact same dependency versions when
running \fBshards install\fP again.
.sp
If your shard builds an application, both \fBshard.yml\fP and \fBshard.lock\fP
should be checked into version control to provide reproducible
dependency installs.
If it is only a library for other shards to depend
on, \fBshard.lock\fP should \fInot\fP be checked in, only \fBshard.yml\fP. It’s good
advice to add it to \fB.gitignore\fP.
.SH "COMMANDS"
.sp
If no \fIcommand\fP is given, \fBinstall\fP command will be run by default.
.sp
To see the available options for a particular command, use \fB\-\-help\fP after the command.
.sp
\fBbuild [<targets>] [<build_options>...]\fP
.RS 4
Builds the specified \fBtargets\fP in \fBbin/\fP path. If no targets are specified,
all are built.
This command ensures all dependencies are installed, so it is not necessary
to run \fBshards install\fP before.
.sp
All \fBbuild_options\fP following the command are delegated to \fBcrystal build\fP.
.RE
.sp
\fBcheck\fP
.RS 4
Verifies that all dependencies are installed and requirements are satisfied.
.sp
Exit status:
.sp
\fB0\fP: Dependencies are satisfied.
.sp
\fB1\fP: Dependencies are not satisfied.
.RE
.sp
\fBinit\fP
.RS 4
Initializes a default \fBshard.yml\fP in the current folder.
.RE
.sp
\fBinstall [\-\-frozen] [\-\-without\-development] [\-\-production] [\-\-skip\-postinstall]\fP
.RS 4
Resolves and installs dependencies into the \fBlib/\fP folder. If not already
present, generates a \fBshard.lock\fP file from resolved dependencies, locking
version numbers or Git commits.
.sp
Reads and enforces locked versions and commits if a \fBshard.lock\fP file is
present. The \fBinstall\fP command may fail if a locked version doesn\(cqt match
a requirement, but may succeed if a new dependency was added, as long as it
doesn\(cqt generate a conflict, thus generating a new \fBshard.lock\fP file.
.sp
\fB\-\-frozen\fP
.RS 4
Strictly installs locked versions from \fBshard.lock\fP. Fails if \fBshard.lock\fP is missing.
.RE
.sp
\fB\-\-without\-development\fP
.RS 4
Does not install development dependencies.
.RE
.sp
\fB\-\-production\fP
.RS 4
same as \fI\-\-frozen\fP and \fI\-\-without\-development\fP
.RE
.sp
\fB\-\-skip\-postinstall\fP
.RS 4
Does not run postinstall of dependencies.
.RE
.RE
.sp
\fBlist [\-\-tree]\fP
.RS 4
Lists the installed dependencies and their versions.
.sp
Specifying \fB\-\-tree\fP arranges nested dependencies in a tree, instead of a flattened list.
.RE
.sp
\fBlock [\-\-update [<shards>...]]\fP
.RS 4
Resolves dependencies and creates or updates the \fBshard.lock\fP file as per
the \fBinstall\fP command, but never installs the dependencies.
.sp
Specifying \fB\-\-update\fP follows the same semantics as the \fBupdate\fP
command.
.RE
.sp
\fBoutdated [\-\-pre]\fP
.RS 4
Lists dependencies that are outdated.
.sp
When \fB\-\-pre\fP is specified, pre\-release versions are also considered.
.RE
.sp
\fBprune\fP
.RS 4
Removes unused dependencies from \fBlib/\fP folder.
.RE
.sp
\fBupdate [<shards>...]\fP
.RS 4
Resolves and updates all dependencies into the \fBlib/\fP folder,
whatever the locked versions in the \fBshard.lock\fP file.
Eventually generates a new \fBshard.lock\fP file.
.sp
Specifying \fIshards\fP will update these dependencies only, trying to be as
conservative as possible with other dependencies, respecting the locked versions
in the \fBshard.lock\fP file.
.RE
.sp
\fBversion [<path>]\fP
.RS 4
Prints the current version of the shard located at \fBpath\fP (defaults to current
directory).
.RE
.sp
To see the available options for a particular command, use \fB\-\-help\fP
after a command.
.SH "GENERAL OPTIONS"
.sp
\fB\-\-version\fP
.RS 4
Prints the version of \fIshards\fP.
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.RS 4
Prints usage synopsis.
.RE
.sp
\fB\-\-no\-color\fP
.RS 4
Disables colored output.
.RE
.sp
\fB\-\-local\fP
.RS 4
Don\(cqt update remote repositories, use the local cache only.
.RE
.sp
\fB\-\-ignore\-crystal\-version\fP
.RS 4
Do not enforce crystal version restrictions on shards.
.RE
.sp
\fB\-q\fP, \fB\-\-quiet\fP
.RS 4
Decreases the log verbosity, printing only warnings and errors.
.RE
.sp
\fB\-v\fP, \fB\-\-verbose\fP
.RS 4
Increases the log verbosity, printing all debug statements.
.RE
.SH "INSTALLATION"
.sp
Shards is usually distributed with Crystal itself. Alternatively, a
separate \fIshards\fP package may be available for your system.
.sp
To install from source, download or clone
.URL "https://github.com/crystal\-lang/shards" "the repository" " "
and run
\fBmake CRFLAGS=\-\-release\fP. The compiled binary is in \fBbin/shards\fP and
should be added to \fBPATH\fP.
.SH "ENVIRONMENT VARIABLES"
.sp
\fBSHARDS_OPTS\fP
.RS 4
Allows general options to be passed in as environment variable.
\fBExample\fP: \fBSHARDS_OPTS="\-\-ignore\-crystal\-version" shards update\fP
.RE
.sp
\fBSHARDS_CACHE_PATH\fP
.RS 4
Defines the cache location. In this folder, shards stores local copies of remote
repositories.
Defaults to \fB.cache/shards\fP in the home directory (\fB$XDG_CACHE_HOME\fP or \fB$HOME\fP)
or the current directory.
.RE
.sp
\fBSHARDS_INSTALL_PATH\fP
.RS 4
Defines the location where dependecies are installed.
Defaults to \fBlib/\fP.
.RE
.sp
\fBSHARDS_BIN_PATH\fP
.RS 4
Defines the location where executables are installed.
Defaults to \fBbin/\fP.
.RE
.sp
\fBCRYSTAL_VERSION\fP
.RS 4
Defines the crystal version that dependencies should be resolved against.
Defaults to the output of \fBcrystal env CRYSTAL_VERSION\fP.
.RE
.sp
\fBSHARDS_OVERRIDE\fP
.RS 4
Defines the location of \fBshard.override.yml\fP.
.RE
.SH "FILES"
.sp
\fBshard.yml\fP
.RS 4
Describes a shard project including its dependencies.
See \fBshard.yml\fP(5) for documentation.
.RE
.sp
\fBshard.override.yml\fP
.RS 4
Local overrides to \fBshard.yml\fP.
.RE
.sp
\fBshard.lock\fP
.RS 4
Lockfile that stores information about the installed versions.
.sp
If your shard builds an application, \fBshard.lock\fP should be checked into version
control to provide reproducible dependency installs.
.sp
If it is only a library for other shards to depend on, \fBshard.lock\fP should \fInot\fP
be checked in, only \fBshard.yml\fP. It’s good advice to add it to \fB.gitignore\fP.
.RE
.SH "REPORTING BUGS"
.sp
Report shards bugs to \c
.URL "https://github.com/crystal\-lang/shards/issues" "" ""
.sp
Crystal Language home page: \c
.URL "https://crystal\-lang.org" "" ""
.SH "COPYRIGHT"
.sp
Copyright © 2021 Julien Portalier.
.sp
.URL "http://www.apache.org/licenses/LICENSE\-2.0" "License Apache 2.0" ""
.sp
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH "AUTHORS"
.sp
Written by Julien Portalier and the Crystal project.
.SH "SEE ALSO"
.sp
\fBshard.yml\fP(5)